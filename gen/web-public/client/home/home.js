// Generated by CoffeeScript 1.9.2
(function() {
  module.exports = [
    '$scope', 'ngDialog', function($scope, ngDialog) {
      $scope.paymentMethods = [
        {
          id: 'cc',
          name: 'Credit Card',
          itemLabel: 'Credit Card fee',
          fee: .99
        }, {
          id: 'debit',
          name: 'Debit'
        }, {
          id: 'cash',
          name: 'Cash'
        }
      ];
      $scope.order = {
        items: [
          {
            id: 1,
            quantity: 1,
            name: $scope.menu.products[1].name,
            options: {
              1: 2,
              2: 3,
              3: [6, 7]
            },
            price: 12
          }
        ]
      };
      $scope.customer = {
        signedIn: false,
        name: 'Lukasz Korzeniowski'
      };
      $scope.selectProduct = function(categoryID, productID) {
        var category, item, options, product;
        if ($scope.edit) {
          return;
        }
        product = $scope.menu.products[productID];
        category = $scope.menu.categories[categoryID];
        options = product.options;
        if ((options === void 0 || options.length === 0) && (category.options !== void 0) && (category.options.length > 0)) {
          options = category.options;
        }
        if (options && options.length > 0) {
          return ngDialog.open({
            template: 'order-product/order-product.html',
            controller: require('./../order-product/order-product'),
            resolve: {
              product: function() {
                return product;
              },
              menu: function() {
                return $scope.menu;
              }
            }
          }).closePromise.then(function(item) {
            if (item.value.id) {
              $scope.order.items.push(item.value);
            }
            return $scope.calculateTotal();
          });
        } else {
          item = _.find($scope.order.items, function(i) {
            return i.id === productID;
          });
          if (item) {
            item.quantity++;
            item.price = product.price * item.quantity;
          } else {
            item = {
              id: product.id.toString(),
              name: product.name,
              price: product.price,
              quantity: 1,
              options: {}
            };
            $scope.order.items.push(item);
          }
          return $scope.calculateTotal();
        }
      };
      $scope.removeItem = function(item, index) {
        if (item.quantity > 1) {
          item.quantity--;
        } else {
          _.pullAt($scope.order.items, index);
        }
        return $scope.calculateTotal();
      };
      $scope.calculateTotal = function() {
        var gst, item, j, len, pst, ref, total;
        total = 0;
        ref = $scope.order.items;
        for (j = 0, len = ref.length; j < len; j++) {
          item = ref[j];
          total += item.price;
        }
        $scope.order.total = total;
        gst = total * .05;
        total += gst;
        pst = total * .075;
        total += pst;
        $scope.order.taxes = [
          {
            name: 'GST',
            amount: gst
          }, {
            name: 'PST',
            amount: pst
          }
        ];
        return $scope.order.grandTotal = total;
      };
      $scope.placeOrder = function() {
        if ($scope.customer.signedIn) {
          return ngDialog.open({
            template: 'order-type/order-type.html',
            controller: require('./../order-type/order-type'),
            className: 'ngdialog-theme-default',
            scope: $scope
          });
        } else {
          return ngDialog.open({
            template: 'order-ask-account/order-ask-account.html',
            controller: require('./../order-ask-account/order-ask-account'),
            className: 'ngdialog-theme-default',
            scope: $scope
          });
        }
      };
      return $scope.calculateTotal();
    }
  ];

}).call(this);
